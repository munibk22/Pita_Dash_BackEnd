
spring.datasource.url=jdbc:mysql://localhost:3306/pitadash
#spring.datasource.url=jdbc:mysql://mysql_image:3306/pitadash
#spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}
#spring.datasource.url=jdbc:${DB_URL}
spring.datasource.username=root
#spring.datasource.username=${DB_USERNAME}
spring.datasource.password=root
#spring.datasource.password=${DB_PASSWORD}
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.datasource.driverClassName= com.mysql.cj.jdbc.Driver


# JPA settings
spring.jpa.hibernate.ddl-auto = update

#Debug 
spring.h2.console.enabled=true
spring.jpa.show-sql= true
spring.jpa.properties.hibernate.format_sql=true


# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#server.port= 5757
#8086





#Database Configuration
#db.driver=db.driver=org.postgresql.Driver
#db.url=jdbc:postgresql://localhost/datajpa
#db.username=username
#db.password=password

#Hibernate Configuration
#hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#hibernate.format_sql=true
#hibernate.hbm2ddl.auto=create-drop
#hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
#hibernate.show_sql=true


#PROD_DB_HOST=HOST_HERE
#PROD_DB_PORT=POST_HERE
#PROD_DB_NAME=railway
#PROD_DB_PASSWORD=PASSWORD_HERE
##PROD_DB_USERNAME=postgres


